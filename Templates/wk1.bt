//------------------------------------------------
//--- 010 Editor v12.0 Binary Template
//
//      File: WK1
//   Authors: Noah Hood
//   Version: 0.0.1
//   Purpose: Outline a WK1 file for insight about later file formats
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
typedef struct OPCode {
    uint16 code;
};

typedef struct RecordLength {
    uint16 recLength;   
};

typedef struct RecordHeader { 
    OPCode opcode;
    RecordLength recLength;
};

typedef struct UnknownRecord (uint16 recordLength) { // Placeholder for unknown record types
    RecordHeader header;
    FSkip(recordLength);    
};

typedef struct BOF {
    RecordHeader header;
    uint16 fFmtRevNo; // File format revision number; 05 04 -> 1029 -> Symphony | 04 04 -> 1028 -> 1-2-3 File | 04 06 -> 1030 -> ???
};

typedef struct BRange {
    uint16 startColumn;
    uint16 startRow;
    uint16 endColumn;
    uint16 endRow;
};

typedef struct Range {
    RecordHeader header;
    BRange activeRange;
};

typedef struct CalcCount {
    RecordHeader header;
    ubyte iterCount;
};

typedef struct CalcMode {
    RecordHeader header;
    ubyte calcMode; // 0 = manual mode; FF = automatic
};

typedef struct CalcOrder {
    RecordHeader header;
    ubyte calcOrder; // 0 = natural; 1 = by column; FF = by row
};

typedef struct Split {
    RecordHeader header;
    ubyte split; // 0 = not split; 1 = vertical split; FF = horizontal split
};

typedef struct Sync {
    RecordHeader header;
    ubyte sync; // 0 = not synchronized; FF = synchronized
};

typedef struct Window1 {
    RecordHeader header;
    uint16 curCol;      // cursor column position
    uint16 curRow;      // cursor row position
    ubyte  fmt;         // format (see Appendix A)
    ubyte  unused1;     // unused
    uint16 colWidth;    // column width
    uint16 colOnScreen; // number of columns on screen
    uint16 rowOnScreen; // number of rows on screen
    uint16 leftCol;     // left column
    uint16 topRow;      // top row
    uint16 titleCol;    // number of title columns
    uint16 titleRow;    // number of title rows
    uint16 leftTitleCol;// left title column
    uint16 topTitleRow; // top title row
    uint16 bWidthCol;   // border width column
    uint16 bWidthRow;   // border width row
    uint16 wWidth;      // window width
    uint16 unused2;     // unused
};

typedef struct Table {
    RecordHeader header;
    ubyte  tableExists;  // 0 = no table; 1 = table type 1; 2 = table type 2
    BRange basicRange;
    BRange iCell1;       // input cell 1 range
    BRange iCell2;       // input cell 2 range
};

typedef struct QRange { // query range
    RecordHeader header;
    BRange inputRange;   // input range
    BRange outputRange;  // output range
    BRange criteriaRange;// criteria range
    ubyte  command;      // 0 = no command; 1 = find; 2 = extract; 3 = delete; 4 = unique
};

typedef struct PRange { // print range
    RecordHeader header;
    BRange printingRange;
};

typedef struct Unformatted {
    RecordHeader header;
    ubyte formattedYN; // 0 = formatted; 1 = unformatted
};

typedef struct FRange { // fill range
    RecordHeader header;
    BRange formatRange;
};

typedef struct SRange { // sort range
    RecordHeader header;
    BRange sortRange;
};

typedef struct KRange { // primary sort key range
    RecordHeader header;
    BRange keyRange;
    ubyte order; // sorting order 0 = descending; FF = ascending
};

typedef struct HRange {
    RecordHeader header;
    BRange valRange; // values range
    BRange binRange; // bin range
};

typedef struct Protec {
    RecordHeader header;
    ubyte globProtecToggle; // 0 = global protection off; 1 = global protection on
};

typedef struct Footer {
    RecordHeader header;
    string footerText;
};

typedef struct Header {
    RecordHeader header;
    string headerText;
};

typedef struct Margins {
    RecordHeader header;
    uint16 lMgn; // left margin
    uint16 rMgn; // right margin
    uint16 plength; // page length
    uint16 tMgn; // top margin
    uint16 bMgn; // bottom margin
};

typedef struct LabelFmt {
    RecordHeader header;
    ubyte labelAlignment; // 27h = left; 22h = right; 5Eh = center
};

typedef struct WK1File {
    BOF bof;    
    Range activeRange;
    CalcCount calcCount;
    CalcMode calcMode;
    CalcOrder calcOrder;
    Split split;
    Sync sync;
    Window1 window1;
    Table table;
    QRange qRange;
    PRange prange;
    Unformatted uformatted;
    FRange fRange;
    SRange sRange;
    KRange kRange;  // primary sort key range
    KRange kRange2; // secondary sort key range
    UnknownRecord uRecord1(25);
    UnknownRecord uRecord2(40);
    HRange hRange;
    UnknownRecord uRecord3(16);
    Protec globalProtection;
    Footer footer; // empty footer, so only 1 byte long (null byte)
    Header header;
    UnknownRecord uRecord4(40); // 40-byte print setup
    Margins margins;
    LabelFmt labelFormat;
};

WK1File wk1;